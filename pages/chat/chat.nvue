<template>
	<div class="page">
		<!-- 导航栏 -->
		<wx-nav-bar showBack title="聊天对象名" fixed></wx-nav-bar>
		
		<!-- 聊天内容区域 -->
		<scroll-view scroll-y :scroll-into-view="scrollIntoId" class="bg-light position-fixed left-0 right-0 px-3" :style="chatBodyBottom">
			<!-- 聊天消息列表组件 -->
			<block v-for="(item, index) in lists" :key="index">
				<wx-chat-item :id="item.chatItemId" :item="item" :index="index" :pretime="index > 0 ? lists[index-1].created_time : 0"  @onLongpress="onLongpress"></wx-chat-item>
			</block>

		</scroll-view>
		
		<!-- 底部输入框 -->
		<view class="position-fixed left-0 right-0 border-top flex align-center"
			  style="background-color: #F7F7F7;" :style="'bottom:'+keyboardHeight+'px'">
			  <view class="my-1 flex-1 flex-row align-center">
				<wx-icon-button class="mx-1" :icon="'\ue606'" size="50"></wx-icon-button>
				<view class="flex-1">
					<textarea adjust-position="false" fixed class="bg-white rounded p-2 font-normal" style="height: 80rpx;"></textarea>
				</view>
				
				<wx-icon-button class="mx-1" :icon="'\ue605'" size="50"></wx-icon-button>
				<wx-icon-button class="mr-1" :icon="'\ue603'" size="50"></wx-icon-button>  
			  </view>
		</view>
		
		<!-- 弹出层 -->
		<wx-popup class="border" ref="extend" :fixedBottom="false" :contentWidth="240" :contentHeight="100 * menus.length" :tabbarHeight="110">
			<view v-for="(menuItem,index) in menuLists" :key="index" class="flex flex-column" style="width: 240rpx; height: 100rpx;"
			 @click="clickHandle(menuItem)">
				<view class="flex-1 flex align-center">
					<text class="font-normal pl-3">{{menuItem.title}}</text>
				</view>
			</view>
		</wx-popup>
		
	</div>
</template>

<script>
	import wxNavBar from '@/components/general-ui/wx-nav-bar.nvue'
	import wxIconButton from '@/components/general-ui/wx-icon-button.vue'
	import wxChatItem from '@/components/general-ui/wx-chat-item.vue'
	import wxPopup from '@/components/general-ui/wx-popup.nvue'
	import wxTimeUtil from '@/common/util/wx-time.js'
	export default {
		components: {
			wxNavBar,
			wxChatItem,
			wxIconButton,
			wxPopup,
		},
		data() {
			return {
				isPopupSelf: false,
				isNewChatItem: false,
				bottomBarH: 0,
				keyboardHeight: 0,
				scrollIntoId: "",
				menus: [{
						"chatItemId": "-1",
						"title": "复制",
						"event": "copy",
					},
					{
						"chatItemId": "-1",
						"title": "发送给朋友",
						"event": "",
					},
					{
						"chatItemId": "-1",
						"title": "收藏",
						"event": "",
					},
					{
						"chatItemId": "-1",
						"title": "删除",
						"event": "",
					},
					{
						"chatItemId": "-1",
						"title": "多选",
						"event": "",
					},
					{
						"chatItemId": "-1",
						"title": "撤回",
						"event": "removeChatItem",
					},
				],
				navBarHeight: 0,
				lists:[{
					chatItemId: "0",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 2, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"你好123你好你好你好你好你好你好你好你好你好你好你好你好你好你好你好",
					nickName: "昵称-你好",
					created_time:1613671908,
					isRemove: false,
				},
				{
					chatItemId: "1",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 1, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"好你妹321好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹",
					nickName: "昵称-好你妹",
					created_time:1614271908,
					isRemove: false,
				},
				{
					chatItemId: "2",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 2, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"好你妹321好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹",
					nickName: "昵称-好你妹",
					created_time:1614631908,
					isRemove: false,
				},
				{
					chatItemId: "3",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 2, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"好你妹321好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹",
					nickName: "昵称-好你妹",
					created_time:1614661908,
					isRemove: false,
				},
				{
					chatItemId: "4",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 1, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"好你妹321好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹",
					nickName: "昵称-你好",
					created_time:1614671908,
					isRemove: false,
				},
				{
					chatItemId: "5",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 1, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"好你妹321好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹",
					nickName: "昵称-你好",
					created_time:1614843126,
					isRemove: false,
				},
				{
					chatItemId: "6",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 1, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"好你妹321好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹",
					nickName: "昵称-你好",
					created_time:1615843226,
					isRemove: false,
				},
				{
					chatItemId: "7",
					avatar:"/static/image/iocn_1.jpeg",
					user_id: 2, // 用户ID
					type:"text", //消息内容类型 image, audio,video,file, share
					data:"好你妹321好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹好你妹",
					nickName: "昵称-你好",
					created_time:1615844126,
					isRemove: false,
				},
				]
			}
		},
		computed: {
			// 弹窗菜单
			menuLists() {
				return this.menus.filter(m=>{
					// 是 撤回 && 最新的消息 && 自己的消息
					if (m.title === "撤回") {
						return this.isPopupSelf && this.isNewChatItem
					} else {
						return true
					}
				})
			},
			//聊天区域bottom
			chatBodyBottom() {
				return `top:${this.navBarHeight}px; bottom:${uni.upx2px(110) + this.keyboardHeight}px;`
			},
		},
		mounted() {
			try {
				const res = uni.getSystemInfoSync()
				this.bottomBarH = res.screenHeight - res.windowHeight
			} catch (e) {}
			
			// #ifdef APP-PLUS-NVUE
			var statusBarHeight = plus.navigator.getStatusbarHeight()
			// #endif
			// upx转rpx
			 this.navBarHeight = statusBarHeight + uni.upx2px(90)
			 
			//监听键盘高度变化
			uni.onKeyboardHeightChange(res => {
				let h = res.height - this.bottomBarH
				this.keyboardHeight = Math.max(h, 0)
				
				this.scrollIntoId = res.height === 0 ? "" : this.lists[this.lists.length-1].chatItemId
			})
		},
		methods: {
			isSelf(user_id) {
				//获取本人的id
				let myId = 1
				return user_id === myId	 
			},
			popupShow(x, y) {
				console.log(x, y)
				this.$refs.extend.show(x, y)
			},
			popupHidden() {
				this.$refs.extend.hide()
			},
			// 长按
			onLongpress({x, y, item}) {
				this.isPopupSelf = this.isSelf(item.user_id)
				this.isNewChatItem = (wxTimeUtil.getDiffNow(item.created_time) < 30)
				
				console.log(wxTimeUtil.getDiffNow(item.created_time))
				console.log(this.isNewChatItem)
				// 更新弹窗所绑定的消息ID
				this.menuLists.forEach((m, index) => {
					m.chatItemId = item.chatItemId
				})	
				
				console.log(this.menuLists)
				// 展示弹窗
				this.popupShow(x, y)
			},
			// 菜单事件分发
			clickHandle(item) {
				if (item.chatItemId.length === 0 || item.chatItemId < 0) {
					return
				}
				switch (item.event) {
					case "setTop":
						break;
					case "unsetTop":
						break;
					case "removeChatItem":
						this.removeChatItem(item)
						break;
				}
			},
			removeChatItem(item) {
				this.popupHidden()
				/// 查找id匹配的的消息
				let chatItem = this.lists.find(function(v, i, l){
					return v.chatItemId === item.chatItemId
				})
				/// 标记消息为撤回
				if (chatItem != undefined) {
					chatItem.isRemove = true
				}
			}
		},
	}
</script>

<style>

</style>
